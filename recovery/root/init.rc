import /init.recovery.${ro.hardware}.rc
#ifdef VENDOR_EDIT
#PengNan@BSP.CHG.Basic, 2017/09/07, add for compatibling tow fuel_gauge.
import /recovery_init.${ro.gauge}.rc
#endif
on early-init
    mount debugfs debugfs /sys/kernel/debug
    chmod 0755 /sys/kernel/debug

    # Set the security context of /postinstall if present.
    restorecon /postinstall

    start ueventd
    start healthd

on init
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    export LD_LIBRARY_PATH .:/sbin

    symlink /system/etc /etc

    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    insmod /sec.ko
    mknod /dev/sec c 182 0
    chmod 0660 /dev/sec
    mkdir /sideload
    mkdir /usb_otg

    #ifndef VENDOR_EDIT
    #Junren.Jie@PSW.AD.Ota.1122242, 2017/05/03, Modify for no enought space to do decrypt ozip
    #mount tmpfs tmpfs /tmp
    #else VENDOR_EDIT
    mount tmpfs tmpfs /tmp size=80%
    #endif VENDOR_EDIT

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/vm/max_map_count 1000000
    setprop persist.sys.firstlaunch false

on fs
    write /sys/class/android_usb/android0/f_ffs/aliases adb
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000

    write /sys/class/android_usb/android0/enable 0
    #Shuangquan.Du@PSW.AD.Recovery.0, 2018/07/21, Add for usb otg
    write /sys/class/power_supply/usb/otg_switch 1

    write /sys/class/android_usb/android0/idVendor 22D9
    write /sys/class/android_usb/android0/idProduct 2769
    write /sys/class/android_usb/android0/f_ffs/aliases adb
    write /sys/class/android_usb/android0/functions adb

    #write /sys/class/android_usb/android0/enable 0
    #write /sys/class/android_usb/android0/idVendor 18D1
    #write /sys/class/android_usb/android0/idProduct D001
    #write /sys/class/android_usb/android0/functions adb
    #write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    #write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    #write /sys/class/android_usb/android0/iSerial ${ro.serialno}

    #mount ext4 /dev/block/platform/bootdevice/by-name/system /system_root rw
    #mount ext4 /dev/block/platform/bootdevice/by-name/vendor /vendor rw
#Haitao.Zhou@Prd.BaseDrv, 2015/04/13, Add for merging T-base start
on fs
    write /proc/bootprof "start mobicore (on fs)"
    mkdir /data/app/mcRegistry 0770 system system
    mkdir /data/app/mcRegistry/TbStorage 0770 system system
    chmod 0600 /dev/mobicore
    chown system system /dev/mobicore
    chmod 0666 /dev/mobicore-user
    chown system system /dev/mobicore-user

    #Fangfang.Hui@PSW.AD.Ota.1122242, 2016/08/15, Add for check and autorepair ext4 filesystem partitions in recovery mode, ensure some partitions were ready
#   wait /dev/block/bootdevice/by-name/cache
#   wait /dev/block/bootdevice/by-name/metadata
#   wait /dev/block/bootdevice/by-name/para
    exec /sbin/e2fsck -y /dev/block/platform/bootdevice/by-name/cache
    #exec /sbin/e2fsck -y /dev/block/platform/bootdevice/by-name/userdata
    #mount ext4 /dev/block/platform/bootdevice/by-name/userdata /data rw wait
#Yongming.Shen@PSW.AD.OppoFeature.Customize.1881073, 2019/03/06, Add for mount custom in recovery
    rm /custom
    mkdir /custom
    mount ext4 /dev/block/platform/bootdevice/by-name/odm /custom ro wait

    #MobiCore Daemon Paths
    export MC_AUTH_TOKEN_PATH /efs
    start mobicore
    start vendor.keymaster-3-0
    start hwservicemanager
    start hal_cryptoeng_oppo
    write /proc/bootprof "start mobicore end (on fs)"
#Haitao.Zhou@Prd.BaseDrv, 2015/04/13, Add for merging T-base end

    chmod 0666 /dev/kmsg
    start fuelgauged
on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

    #ifdef COLOROS_EDIT
    #Zhengkang.Ji@Plf.Framework, 2018.02.10 add for system repair
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/wifi 0770 wifi wifi
    mkdir /data/misc/wifi/sockets 0770 wifi wifi
    restorecon_recursive /data/misc/wifi
    #start wmt_loader
    #start wmt_launcher
    #insmod /sbin/wmt_drv.ko
    #endif /* COLOROS_EDIT */

# Load properties from /system/ + /factory after fs mount.
on load_system_props_action
    load_system_props

on firmware_mounts_complete
   rm /dev/.booting

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_system_props_action

    # Remove a file to wake up anything waiting for firmware
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0
#ifdef VENDOR_EDIT
#PengNan@BSP.CHG.Basic, 2017/09/07, add for compatibling tow fuel_gauge.
#service fuelgauged /sbin/fuelgauged_static
#    seclabel u:r:init:s0
#endif
service healthd /sbin/healthd -r
    critical
    seclabel u:r:healthd:s0

service recovery /sbin/recovery
    seclabel u:r:recovery:s0

service adbd /sbin/adbd --root_seclabel=u:r:su:s0 --device_banner=recovery
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0

#ifdef VENDOR_EDIT
#Yang.Li@PSW.AD.Recovery.1134274, 2017/10/23, Add for start console in recovery
service console /sbin/busybox sh
    class core
    console
    disabled
    user root
    group shell log readproc
    seclabel u:r:shell:s0
#endif /* VENDOR_EDIT */

on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd
    #start console service when adbd start
    start console

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

#Zequan.Wang@PSW.AD.Recovery.1122242, 2017/12/14, Add for reload persist property when decrypted and mount /data
on property:recovery.reload.persist=trigger_reload_persist
    load_persist_props

on property:enable.fbe.service=0
    stop hal_cryptoeng_oppo
    stop mobicore

# Start Daemon (Registry directories should already be present)
service mobicore /sbin/mcDriverDaemon --P1 /sbin/mcRegistry \
	-r /sbin/mcRegistry/06090000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/020f0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/05120000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/070b0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/020b0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/05070000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/030b0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/03100000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/030c0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/07070000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/5020170115e016302017012521300000.drbin \
	-r /sbin/mcRegistry/40188311faf343488db888ad39496f9a.drbin \
	-r /sbin/mcRegistry/070c0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/090b0000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/0f5eed3c3b5a47afacca69a84bf0efad.drbin \
	-r /sbin/mcRegistry/07060000000000000000000000007169.drbin \
	-r /sbin/mcRegistry/07070000000000000000000000000000.drbin \
	-r /sbin/mcRegistry/07407000000000000000000000000000.drbin
    #service mobicore /sbin/mcDriverDaemon --P1 /sbin/mcRegistry -r 020f0000000000000000000000000000.drbin -r 07170000000000000000000000000000.drbin
    #user system
    #group system
    #class core
    #priority -20
    seclabel u:r:recovery:s0

#ifdef VENDOR_EDIT
#Yang.Li@PSW.AD.Recovery.1173425, 2017/12/14, Add for FDE in Android O with keymaster3.0
service vendor.keymaster-3-0 /sbin/android.hardware.keymaster@3.0-service
    #class early_hal
    #user system
    #group system drmrpc
    seclabel u:r:recovery:s0

service hwservicemanager /sbin/hwservicemanager
    disabled
    onrestart setprop hwservicemanager.ready false
    writepid /dev/cpuset/system-background/tasks
    seclabel u:r:recovery:s0

service hal_cryptoeng_oppo /sbin/vendor.oppo.hardware.cryptoeng@1.0-service
    seclabel u:r:recovery:s0

#Restart FDE related services to ensure decrypt success
#on property:recovery.fde.service=trigger_restart_service
#    restart hwservicemanager
#    restart keymaster-3-0
#endif VENDOR_EDIT

#ifdef COLOROS_EDIT
#Zhengkang.Ji@Plf.Framework, 2018.02.10 add for system repair
service wmt_loader /vendor/bin/wmt_loader
    class wmt
    oneshot
    seclabel u:r:recovery:s0

service wmt_launcher /vendor/bin/wmt_launcher -p /vendor/firmware/
    class wmt
    oneshot
    seclabel u:r:recovery:s0

service wmt_check_patch /system/bin/wmt_check_patch
    class wmt
    oneshot
    seclabel u:r:recovery:s0

service netd /sbin/netd
    class main
    socket netd stream 0660 root system
    socket dnsproxyd stream 0660 root inet
    socket mdns stream 0660 root system
    socket fwmarkd stream 0660 root inet

service servicemanager /sbin/servicemanager
    #class core animation
    #user system
    #group system readproc
    #critical
    #onrestart restart healthd
    #onrestart restart zygote
    #onrestart restart audioserver
    #onrestart restart media
    #onrestart restart surfaceflinger
    #onrestart restart inputflinger
    #onrestart restart drm
    #onrestart restart cameraserver
    #onrestart restart keystore
    #onrestart restart gatekeeperd
    writepid /dev/cpuset/system-background/tasks
    #shutdown critical
    seclabel u:r:recovery:s0

service vndservicemanager /vendor/bin/vndservicemanager /dev/vndbinder
    writepid /dev/cpuset/system-background/tasks
    seclabel u:r:recovery:s0

service wpa_supplicant /sbin/wpa_supplicant \
    -Dnl80211 -iwlan0 -dd -O/data/misc/wifi/sockets \
    -c/data/misc/wifi/wpa_supplicant.conf
    disabled
    oneshot
    seclabel u:r:recovery:s0

service logd /system/bin/logd
    socket logd stream 0666 logd logd
    socket logdr seqpacket 0666 logd logd
    socket logdw dgram 0222 logd logd
    file /proc/kmsg r
    file /dev/kmsg w
    user logd
    group logd system readproc
    writepid /dev/cpuset/system-background/tasks


#endif /* COLOROS_EDIT */

